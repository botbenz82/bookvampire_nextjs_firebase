rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /theme/{parent}/category/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/category/{document} {
      allow read: if true;
    }


    match /tag/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /theme/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /notification/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /users/{parent}/plan/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if false;
    }

    match /post/{parent}/review/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/review/{document} {
      allow read: if true;
    }


    match /post/{parent}/comments/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/comments/{document} {
      allow read: if true;
    }


    match /ff_user_push_notifications/{document} {
      allow create: if /databases/$(database)/documents/users/$(request.auth.uid) == request.resource.data.sender;
      allow read: if false;
      allow write: if false;
      allow delete: if false;
    }

    match /post/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if resource.data.user_ref == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /users/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /{document=**} {
      allow read, write: if request.auth.token.email.matches("firebase@flutterflow.io");
    }

    match /{document=**} {
      allow read, write: if true;
    }
  }
}